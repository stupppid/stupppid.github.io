{"version":3,"sources":["lib/snow/index.js","lib/process/index.js","index.js"],"names":["Snow","id","rootEl","cb","fun","time","setTimeout","open","callback","classList","remove","document","createElement","add","i","el","appendChild","getElementById","body","close","quit","undefined","module","exports","cout","value","console","log","Process","Xnumber","showNumber","initNumber","processBar","processEntity","numberSpan","Object","defineProperty","set","style","width","innerText","get","number","require","snow","process","window"],"mappings":";AAAA,SAASA,EAAMC,GACTC,IAAAA,EAEKC,SAAAA,EAAIC,GAAKC,IAAAA,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,IACnBD,GACFE,WAAWF,EAAKC,GAIfE,KAAAA,KAAO,SAAUC,GAChB,GAACN,EAcHA,EAAOO,UAAUC,OAAO,iBAdb,EACXR,EAASS,SAASC,cAAc,QACzBH,UAAUI,IAAI,cAChB,IAAA,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACvBC,IAAAA,EAAKJ,SAASC,cAAc,OAChCG,EAAGN,UAAUI,IAAI,QAAUC,GAC3BZ,EAAOc,YAAYD,GAEjBd,EACFU,SAASM,eAAehB,GAAIe,YAAYd,GAExCS,SAASO,KAAKF,YAAYd,GAK9BC,EAAGK,IAGAW,KAAAA,MAAQ,SAAUX,GACrBN,EAAOO,UAAUI,IAAI,aACrBV,EAAGK,IAGAY,KAAAA,KAAO,SAAUZ,GACfW,KAAAA,QACLhB,EAAG,WACDD,EAAOQ,SACPR,OAASmB,EACLb,GACFA,OAMRc,OAAOC,QAAUvB;;ACPjB,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAtCA,SAASwB,EAAKC,GACZC,QAAQC,IAAIF,GAGRG,IAAAA,EACJ,SAA8F,EAAA,GAA/E1B,IACT2B,EADS3B,EAAAA,EAAAA,OAAAA,OAASS,IAAAA,EAAAA,SAASO,KAA6D,EAAvDY,EAAAA,EAAAA,WAAAA,OAAa,IAAA,GAA0C,EAAnCC,EAAAA,EAAAA,WAAAA,OAAa,IAAA,EAAA,EAAsB,EAAnBvB,EAAAA,EAAAA,SAAAA,OAAWgB,IAAAA,EAAAA,EAAQ,EAAA,EAAA,KAAA,GAGxFQ,IAAAA,EAAarB,SAASC,cAAc,OACpCqB,EAAgBtB,SAASC,cAAc,OACvCsB,EAAavB,SAASC,cAAc,QACxCoB,EAAWvB,UAAUI,IAAI,gBACzBoB,EAAcxB,UAAUI,IAAI,kBAC5BqB,EAAWzB,UAAUI,IAAI,eACzBmB,EAAWhB,YAAYiB,GACnBH,GACF5B,EAAOc,YAAYkB,GAErBhC,EAAOc,YAAYgB,GACnB9B,EAAOc,YAAYkB,GACnBC,OAAOC,eAAe,KAAM,SAAU,CACpCC,IAAKZ,SAAAA,GACHI,EAAUJ,EACVQ,EAAcK,MAAMC,MAAQ,QAAUd,EAAQ,WAC9CS,EAAWM,UAAYf,EAAQ,IAE3BA,GAAS,KACXjB,KAGJiC,IAAO,WACEZ,OAAAA,KAGNa,KAAAA,OAASX,GAIlBT,OAAOC,QAAUK;;;ACvCjB,IAAM5B,EAAO2C,QAAQ,oBACff,EAAUe,QAAQ,uBAEpBC,EAAO,IAAI5C,EACf4C,EAAKrC,OAEL,IAAIsC,EAAU,IAAIjB,EAAQ,CACxB1B,OAAQS,SAASM,eAAe,WAChCa,YAAY,IAEdgB,OAAOD,QAAUA","file":"stupppid.github.io.c573a201.js","sourceRoot":"..","sourcesContent":["function Snow (id) {\r\n  let rootEl\r\n\r\n  function cb (fun, time = 2000) {\r\n    if (fun) {\r\n      setTimeout(fun, time)\r\n    }\r\n  }\r\n\r\n  this.open = function (callback) {\r\n    if (!rootEl) {\r\n      rootEl = document.createElement('div')\r\n      rootEl.classList.add('snow-group')\r\n      for (let i = 1; i <= 3; i++) {\r\n        let el = document.createElement('div')\r\n        el.classList.add('snow-' + i)\r\n        rootEl.appendChild(el)\r\n      }\r\n      if (id) {\r\n        document.getElementById(id).appendChild(rootEl)\r\n      } else {\r\n        document.body.appendChild(rootEl)\r\n      }\r\n    } else {\r\n      rootEl.classList.remove('snow-stop')\r\n    }\r\n    cb(callback)\r\n  }\r\n\r\n  this.close = function (callback) {\r\n    rootEl.classList.add('snow-stop')\r\n    cb(callback)\r\n  }\r\n\r\n  this.quit = function (callback) {\r\n    this.close()\r\n    cb(function () {\r\n      rootEl.remove()\r\n      rootEl = undefined\r\n      if (callback) {\r\n        callback()\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nmodule.exports = Snow\r\n","\r\nfunction cout(value) {\r\n  console.log(value)\r\n}\r\n\r\nclass Process {\r\n  constructor ({ rootEl = document.body, showNumber = false, initNumber = 0, callback = cout }) {\r\n    let Xnumber\r\n    let tween\r\n    let processBar = document.createElement('div')\r\n    let processEntity = document.createElement('div')\r\n    let numberSpan = document.createElement('span')\r\n    processBar.classList.add('process-wrap')\r\n    processEntity.classList.add('process-entity')\r\n    numberSpan.classList.add('number-span')\r\n    processBar.appendChild(processEntity)\r\n    if (showNumber) {\r\n      rootEl.appendChild(numberSpan)\r\n    }\r\n    rootEl.appendChild(processBar)\r\n    rootEl.appendChild(numberSpan)\r\n    Object.defineProperty(this, 'number', {\r\n      set (value) {\r\n        Xnumber = value\r\n        processEntity.style.width = 'calc(' + value + '% - 6px)'\r\n        numberSpan.innerText = value + '%'\r\n\r\n        if (value >= 100) {\r\n          callback()\r\n        }\r\n      },\r\n      get () {\r\n        return Xnumber\r\n      }\r\n    })\r\n    this.number = initNumber\r\n  }\r\n}\r\n\r\nmodule.exports = Process\r\n","const Snow = require('./lib/snow/index')\r\nconst Process = require('./lib/process/index')\r\n\r\nlet snow = new Snow()\r\nsnow.open()\r\n\r\nlet process = new Process({\r\n  rootEl: document.getElementById('process'),\r\n  showNumber: true\r\n})\r\nwindow.process = process\r\n"]}